import 'package:VilaCruise/screens/beauty_care_screen.dart';
import 'package:VilaCruise/screens/local_info_screen.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // Generated by FlutterFire CLI

import 'theme/theme_notifier.dart';

import 'screens/landing_screen.dart';
import 'screens/main_screen.dart';
import 'screens/cruise_guide_screen.dart';
import 'screens/tours_screen.dart';
import 'screens/map_screen.dart';
import 'screens/attractions_screen.dart';
import 'screens/auth_screen.dart';
import 'screens/settings_screen.dart';
import 'screens/profile_screen.dart';
import 'screens/foreign_currency_screen.dart';
import 'screens/dining_screen.dart';
import 'screens/shopping_screen.dart';
import 'screens/transport_screen.dart';
import 'screens/kids_space_screen.dart';
import 'screens/self_guided_walk_tour_screen.dart';
import 'screens/cruise_schedule_screen.dart';
import 'screens/booking_confirmation_screen.dart';
import 'screens/user_bookings_screen.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);

  runApp(
    ChangeNotifierProvider(
      create: (_) => ThemeNotifier(),
      child: const PortVilaCruiseGuideApp(),
    ),
  );
}

class PortVilaCruiseGuideApp extends StatelessWidget {
  const PortVilaCruiseGuideApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Consumer<ThemeNotifier>(
      builder: (context, themeNotifier, _) {
        return MaterialApp(
          title: 'VilaCruise',
          debugShowCheckedModeBanner: false,
          theme: themeNotifier.currentTheme,
          initialRoute: '/',
          routes: {
            '/': (context) => const LandingScreen(),
            '/main': (context) => const MainScreen(),
            '/cruiseGuide': (context) => const CruiseGuideScreen(),
            '/tours': (context) => const ToursScreen(),
            '/map': (context) => const MapScreen(),
            '/attractions': (context) => const AttractionsScreen(),
            '/auth': (context) => const AuthScreen(),
            '/settings': (context) => const SettingsScreen(),
            '/profile': (context) => const ProfileScreen(),
            '/foreignCurrency': (context) => ForeignCurrencyScreen(),
            '/dining': (context) => const DiningScreen(),
            '/shopping': (context) => const ShoppingScreen(),
            '/transport': (context) => const TransportScreen(),
            '/localInfo': (context) => const LocalInfoScreen(),
            '/beautyCare': (context) => const BeautyCareScreen(),
            '/kidsSpace': (context) => const KidsSpaceScreen(),
            '/selfguidedwalkTour':
                (context) => const SelfGuidedWalkTourScreen(),
            '/cruiseSchedule': (context) => const CruiseScheduleScreen(),
            // Do NOT register '/confirmation' or '/user_bookings' hereâ€”they need arguments!
          },
          onGenerateRoute: (settings) {
            if (settings.name == '/confirmation') {
              final args = settings.arguments as Map<String, dynamic>;
              return MaterialPageRoute(
                builder:
                    (_) => BookingConfirmationScreen(
                      bookingId: args['bookingId'],
                      attractionName: args['attractionName'],
                      imageUrl: args['imageUrl'],
                      date: args['date'],
                      ticketCount: args['ticketCount'],
                      totalPaid: args['totalPaid'],
                      packageName: args['packageName'],
                    ),
              );
            }
            if (settings.name == '/user_bookings') {
              final args = settings.arguments as Map<String, dynamic>?;
              String userId =
                  args != null && args.containsKey('userId')
                      ? args['userId']
                      : "demo_uid";
              return MaterialPageRoute(
                builder: (_) => UserBookingsScreen(userId: userId),
              );
            }
            return null;
          },
        );
      },
    );
  }
}
